# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
env:
  DB_DATABASE: ${{ vars.DB_DATABASE }}
  DB_USERNAME: postgres
  DB_PASSWORD: postgres
  DB_HOST: localhost
  MESSAGE_BROKER_HOST: localhost
  DB_PORT: 5432
  PROFILE: ${{ vars.PROFILE }}
jobs:
  build:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      message_broker:
        image: rabbitmq:3
        ports:
          - "5672:5672"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Populate Database
        run: psql -U postgres -h localhost -d ${{ env.DB_DATABASE }} -f src/main/resources/init.sql
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        env:
          PROFILE: ${{ env.PROFILE }}
          DATABASE: ${{ vars.DB_DATABASE }}
          DB_USERNAME: ${{env.DB_USERNAME}}
          DB_PASSWORD: ${{env.DB_PASSWORD}}
          DB_HOST: ${{env.DB_HOST}}
          MESSAGE_BROKER_HOST: ${{env.MESSAGE_BROKER_HOST}}
          DB_PORT: ${{env.DB_PORT}}
        with:
          arguments: build --no-daemon